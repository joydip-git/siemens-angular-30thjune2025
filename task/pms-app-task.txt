the task is to create an angular application which will be used to manage product data

following are the features:
1. view all products
2. view single product detail
3. add a new product
4. update an existing product
5. delete an existing product
6. authentication feature
	i. user should login first with user name and password
	ii. after successful authentication user will be directed by default to a view which displays all the products

part-1: create a component which displays all the products
-----------------------------------------------------------------------------
a. application: create a new angular application: pms-app

b. model for product type: 
	i.  create a new sub-folder in the "app" directory: models
	ii. create an interface "Product" in a TS file "product.ts" in the "models" folder, which is type for sample product data

c. repository of sample records:
	i.  create a new sub-folder in the "app" directory: data
	ii. create a file named: "products.ts" and in this file create an exportable array of Product model type and assign the following sample array (in JSON format) of products to the array variable

sample data array:

[
    {
        "productId": 1,
        "productName": "Leaf Rake",
        "productCode": "GDN-0011",
        "releaseDate": "March 19, 2016",
        "description": "Leaf rake with 48-inch wooden handle.",
        "price": 19.95,
        "starRating": 4,
        "imageUrl": "http://openclipart.org/image/300px/svg_to_png/26215/Anonymous_Leaf_Rake.png"
    },
    {
        "productId": 2,
        "price": 500,
        "productName": "Garden Cart",
        "description": "15 gallon capacity rolling garden cart",
        "productCode": "GDN-0023",
        "releaseDate": "March 18, 2019",
        "starRating": 4,
        "imageUrl": "http://openclipart.org/image/300px/svg_to_png/58471/garden_cart.png"
    },
    {
        "productId": 3,
        "productName": "Hammer",
        "productCode": "TBX-0048",
        "releaseDate": "May 21, 2016",
        "description": "Curved claw steel hammer",
        "price": 8.9,
        "starRating": 2,
        "imageUrl": "http://openclipart.org/image/300px/svg_to_png/73/rejon_Hammer.png"
    },
    {
        "productId": 4,
        "productName": "Saw",
        "productCode": "TBX-0022",
        "releaseDate": "May 15, 2016",
        "description": "15-inch steel blade hand saw",
        "price": 11.55,
        "starRating": 3.7,
        "imageUrl": "http://openclipart.org/image/300px/svg_to_png/27070/egore911_saw.png"
    },
    {
        "productId": 5,
        "productName": "Video Game Controller",
        "productCode": "GMG-0042",
        "releaseDate": "October 15, 2015",
        "description": "Standard two-button video game controller",
        "price": 35.95,
        "starRating": 4,
        "imageUrl": "http://openclipart.org/image/300px/svg_to_png/120337/xbox-controller_01.png"
    }
]

d. component creation:
	i.  create a directory, named: "products" inside the "app" directory to store all assets (components, services, directives, pipes, module etc.) related to product feature module

	ii. create a directory, named: "components" inside the "products" directory
	iii. create a directory, named: "product-list" inside the "components" directory
	iv. create a new component: "ProductList" inside a file "product-list.ts" inside "product-list" directory. this component should have a property to which the array of products from "products.ts" file should be assigned
	v. in the component template use an HTML <table> element to display the details of the following properties of every product using <tr> element
		- 1st column: Image -> displays image of a product
		- 2nd column: Name -> displays name of a product
		- 3rd column: Price -> displays price of a product
		- 4th column: Rating -> displays starRating of a product
		- 5th column: Delete -> displays a button with text 'Delete' (this will be used later to implement 'delete a product' feature)
	vi. register the component with the module (app module)
	vii. nest the component in the root component (App)

Run the application

structure of the application:
	app
		app-module.ts
		app.ts
		app.html
		app.css

		products: (folder)
			products-module.ts

			components (folder)
				product-list (folder)
					product-list.ts
					product-list.html
					product-list.css

			services (folder)
				product-service.ts

			pipes (folder)
				product-pipe.ts

			directives (folder)
	
	